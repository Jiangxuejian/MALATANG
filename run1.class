! aim: to define windows automatically using Gaussian fitting results in the CO data at the same location (+- 5" area). 
!      to automatically do the qualification using RMS ratio (measured/theoretical) and the Allan deviation (measured/theoretical) 
!      to output a qualify.dat file for future use 


define double spec_number redshift 
define double l b off_ra off_dec  
define double sm_times input_reso
define double rms_theory rms_measured rms_allan  rms_ori rrms allan 
define char   infile*128 outfile*128 reffile*128 
define double N I0 V0 Dv N_out I0_out V0_out Dv_out
define double win1 win2

set var gauss read
set weight eq

let input_reso 20 ! km/s
let redshift 0.000811 


file in b_receptors_class.30m
find

let spec_number found 

define double allan_array[spec_number]
define double rrms_array[spec_number]
    
! ---------get the CO line information 
file in  N253_CO_TMB.45m_recenter.45m 
find
sic dele test.jcmt
file out test.jcmt s  
say "#index Allan_deviation Rms_ratio "
sic out quality.dat
for i 1 to spec_number 
    get i
    !---------get the CO spectral information -----
    let N channels 
    let I0 reference 
    let V0 velocity
    let Dv velo_step
    let N_out N/(input_reso/Dv)*0.9  
    let I0_out N_out/2+0.5  
    let v0_out v0
    let Dv_out input_reso 

    !---------get the CO data in the same position -----
    let off_ra  off_lambda
    let off_dec off_beta 
    find /range off_ra-5 off_ra+5  off_dec-5 off_dec+5 /number spec_number+1 *
    ave
    set win -200 200 
    set mod x -400 400 

    base 
    min
!   pause 
    let win1 R%HEAD%GAU%NFIT[2]-R%HEAD%GAU%NFIT[3]
    let win2 R%HEAD%GAU%NFIT[2]+R%HEAD%GAU%NFIT[3]
    pl 

! ----------------------------------------
! now we have the line centre and the Gaussian width of the CO data.  
!-----------------------------------------

! -------------- now we qualify the spectra using the window (also the baselines) defined by the CO data.  
    get i
    base 
    let rms_ori  sigma 
    resample  N_out I0_out  v0_out Dv_out velocity

    set win win1 win2
    base 
    
    let rms_measured sigma 
    let rms_theory   Tsys*1.4/sqrt(abs(freq_step*1e6*time))
    let rms_allan    rms_ori/sqrt(Dv_out/Dv) 
    let rrms         rms_measured/rms_theory 
    let allan        rms_measured/rms_allan 
    let rrms_array[i] rrms
    let allan_array[i] allan 
    analyse\draw text 20 13 "allan "
    analyse\draw text 23 13 'nint(allan*100)/100'
    analyse\draw text 20 14 "Rrms:             "
    analyse\draw text 22 14 'nint(rrms*100)/100'
    write i
    spec /pen 1
    draw win
    sic wait 0.1 
    say 'i' 'allan' 'rrms' 
next
sic out 

pause 
!python
!Sic.setgdict(globals())
!np.max(allan_array)



